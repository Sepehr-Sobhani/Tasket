[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tasket-backend"
version = "0.1.0"
description = "Backend API for Tasket - Collaborative Agile Project Management"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Tasket Team", email = "team@tasket.com"}
]
keywords = ["fastapi", "project-management", "agile", "collaboration"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # FastAPI and ASGI
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "websockets==12.0",
    # Database
    "sqlalchemy==2.0.23",
    "alembic==1.12.1",
    "psycopg2-binary==2.9.9",
    # Authentication and Security
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-multipart==0.0.6",
    # Pydantic for data validation
    "pydantic==2.5.0",
    "pydantic-settings==2.1.0",
    # HTTP client for GitHub API
    "httpx==0.25.2",
    "aiohttp==3.9.1",
    # Background tasks
    "celery==5.3.4",
    "redis==5.0.1",
    # Environment variables
    "python-dotenv==1.0.0",
    # CORS
    "fastapi-cors==0.0.6",
    # Logging
    "structlog==23.2.0",
    # Date and time
    "python-dateutil==2.8.2",
    # Email
    "fastapi-mail==1.4.1",
    "fastapi-users[sqlalchemy]>=12.1.2",
    "authlib>=1.6.0",
    "asyncpg>=0.30.0",
    "itsdangerous>=2.2.0",
    "pyjwt>=2.8.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",

    # Development tools
    "ruff==0.12.4",
    "ty==0.0.1a15",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["app"]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
