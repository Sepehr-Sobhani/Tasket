"""remove_github_integrations_table

Revision ID: 4d001f6df8b8
Revises: 4c3821fffb29
Create Date: 2025-09-02 10:08:37.499503

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4d001f6df8b8"  # pragma: allowlist secret
down_revision: str | None = "4c3821fffb29"  # pragma: allowlist secret
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_github_integrations_id", table_name="github_integrations")
    op.drop_table("github_integrations")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "github_integrations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "user_id", sa.VARCHAR(length=26), autoincrement=False, nullable=False
        ),
        sa.Column(
            "project_id", sa.VARCHAR(length=26), autoincrement=False, nullable=True
        ),
        sa.Column(
            "access_token", sa.VARCHAR(length=500), autoincrement=False, nullable=False
        ),
        sa.Column(
            "refresh_token", sa.VARCHAR(length=500), autoincrement=False, nullable=True
        ),
        sa.Column(
            "token_expires_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "repo_owner", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "repo_name", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "repo_id", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "webhook_id", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "webhook_secret", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "webhook_url", sa.VARCHAR(length=500), autoincrement=False, nullable=True
        ),
        sa.Column("sync_issues", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "sync_pull_requests", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column("sync_comments", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("sync_labels", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "integration_metadata",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "last_sync_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["project_id"], ["projects.id"], name="github_integrations_project_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="github_integrations_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="github_integrations_pkey"),
    )
    op.create_index(
        "ix_github_integrations_id", "github_integrations", ["id"], unique=False
    )
    # ### end Alembic commands ###
